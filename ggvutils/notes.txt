

questions app -- notes

For questionsetview, i need to try using formview instead of detailview. will need to figure out how to initialize the question set from request (url) parameter. -- This may be the proper way to customize a form for worksheets.

for study:
http://ccbv.co.uk/projects/Django/1.6/django.views.generic.edit/FormMixin/
http://lgiordani.github.io/blog/2014/02/14/digging-up-django-class-based-views-3/

TODO:
add comment field to questions -- instructor only
add login record view for printing.
add worksheet response log for each student
add email instructor when worksheet is responded.
add eng/span toggle in lesson menu

add commenting system on lesson stacks and worksheets. Teacher can message student or students
students can create personal notes attached to a stack or worksheet and/or optionally send note to teacher(s). e.g. questions about a presentation or worksheet.
add messaging system to stacks and worksheets.

using csvkit:
# THIS outputs the options list as json object

csvgrep -r '\d' -c "CORRECT ANSWER","option 1","option 2","option 3","option 4" place-01.csv | csvcut -c "WID","CORRECT ANSWER","option 1","option 2","option 3","option 4" | csvjson -i 4



csvgrep -r '\d' -c "CORRECT ANSWER","option 1","option 2","option 3","option 4" Place\ Value-Table\ 1.csv

csvcut -c "SELECT TYPE","CORRECT ANSWER","option 1","option 2","option 3","option 4" Place\ Value-Table\ 1.csv | csvjson -i 4

# THIS outputs the question list as json object

csvcut -c "QUESTION DISPLAY ORDER","QUESTION","SELECT TYPE"  | csvjson -i 4



Place\ Value-Table\ 1.csv

# This outputs the entire row in json.

csvjson -i 4 place-01.csv


/ggv/sanluis
/ggv/sanluis/lesson/1
/ggv/sanluis/slidestack/684
/ggv/sanluis/worksheet/418
/ggv/sanluis/worksheet/418/1

nov-3-2014
LIST Options: (will need to insert question id)
csvcut -c "SELECT TYPE","CORRECT ANSWER","option 1","option 2","option 3","option 4" Rounding\ Rules-Table\ 1.csv | csvjson -i 4

LIST Questions:
csvcut -c "WID","QUESTION DISPLAY ORDER","QUESTION","SELECT TYPE" Rounding\ Rules-Tale\ 1.csv  | csvjson -i 4

LIST Complete row:
csvcut -c "WID","QUESTION DISPLAY ORDER","QUESTION","IMAGE","SELECT TYPE","CORRECT ANSWER","option 1","option 2","option 3","option 4" <CSV FILENAME> | csvjson -i 4

csvcut -c "WID","QUESTION DISPLAY ORDER","QUESTION","IMAGE","SELECT TYPE","CORRECT ANSWER","option 1","option 2","option 3","option 4" /Users/rmedina/Desktop/ggvworksheet-conversion/worksheet-downloads/worksheets-social/csvdir/SOCIAL-ENG-QUESTIONS-INPUT | csvjson -i 4



march 1st


# print the image path for each question
from utils.wsutil import *
import sys
x=open('imgmapper.csv', 'w')
sys.displayhook(x)
sys.stdout=x

worksheets = QuestionSet.objects.all()
q = [i.get_ordered_question_list() for i in worksheets]
for sheet in worksheets:
	for questions in sheet.get_ordered_question_list():
		for q in questions:
			if q.display_image != '':
				print '%s, %s, %s, %s, %s,' % sheet.section, sheet, q.display_order, q.display_text, q.display_image






"""
from django.contrib.auth.models import User
from pytz import timezone
from datetime import datetime

from django.conf import settings

tz = timezone(settings.TIME_ZONE)

today = datetime.now(tz)

u = User.objects.get(pk=397)

daily = u.activitylog.filter(timestamp__day=today.day)

d = daily[0].timestamp - daily[len(daily)-1].timestamp

print d.seconds/60
"""